{"version":3,"sources":["webpack:///./src/posts/787600579.md","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"gOAOaA,EAAe,CAC1B,MAAS,aACT,KAAQ,YACR,KAAQ,2BACR,KAAQ,CAAC,MACT,WAAc,CAAC,OACf,SAAY,CAAC,QAETC,EAAc,CAClBD,gBAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,cALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,8BACA,0EACA,kFACA,8CACA,gCACA,gCACE,mBAAGC,WAAW,cAAd,yBAEF,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,4BAIL,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,6JAaL,gCACA,uDAAoC,4BAAYA,WAAW,KAAvB,WAApC,SACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,sHASL,kCACA,4EAAyD,4BAAYA,WAAW,KAAvB,WAAzD,eACA,oEACA,yBAAK,oCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,iSAgBL,8BACA,6DAA0C,4BAAYA,WAAW,KAAvB,MAA1C,QAAiG,4BAAYA,WAAW,KAAvB,WAAjG,kBAAuK,4BAAYA,WAAW,KAAvB,YAAvK,qBACA,sCAAmB,4BAAYA,WAAW,KAAvB,MAAnB,UAA4E,4BAAYA,WAAW,KAAvB,MAA5E,QAAmI,4BAAYA,WAAW,KAAvB,QAAnI,eAAmM,4BAAYA,WAAW,KAAvB,MAAnM,kBACA,yCAAsB,4BAAYA,WAAW,KAAvB,MAAtB,UAA+E,4BAAYA,WAAW,KAAvB,SAA/E,KACA,8EAKJJ,EAAWK,gBAAiB,G,kCCxFb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EAZT","file":"component---src-posts-787600579-md-55c5ab54fde6e2c03aab.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"CSS 模拟打字动画\",\n  \"slug\": \"CSS模拟打字动画\",\n  \"date\": \"2021-01-17T10:41:16.000Z\",\n  \"tags\": [\"标签\"],\n  \"categories\": [\"未分类\"],\n  \"keywords\": [\"关键册\"]\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`前言`}</h2>\n    <p>{`或许你看过网上的一些模拟打字的效果，深究其原理，会发现很简单，核心原理就是逐帧动画、闪烁效果。`}</p>\n    <p>{`或许你会想到使用 JavaScript 来实现，固然，这是一个办法，但是这会产生一段又臭又长、难以理解的代码。`}</p>\n    <p>{`这里，我们可以使用纯 CSS 来实现。`}</p>\n    <h2>{`解决方案`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`核心思路将一段文案放置到可拉伸的容器中。`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<h1>这是一段模拟的打字效果。</h1>\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@keyframes typing {\n    from { width: 0 }\n}\n\nh1 {\n    width: 22em;\n    overflow: hidden;\n    white-space: nowrap;\n    animation: typing 4s;\n}\n`}</code></pre>\n    <h3>{`逐字效果`}</h3>\n    <p>{`前面代码并不是逐字显示的，为了解决这一问题，我们可是使用 `}<inlineCode parentName=\"p\">{`steps()`}</inlineCode>{` 来解决：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`h1 {\n    width: 22em;\n    overflow: hidden;\n    white-space: nowrap;\n    animation: typing 4s steps(22);\n}\n`}</code></pre>\n    <h3>{`光标闪烁效果`}</h3>\n    <p>{`是不是觉得还差一些，对，就是差一个光标输入闪烁效果。这里，我们可以使用为元素来生成一个光标，并通过 `}<inlineCode parentName=\"p\">{`opacity`}</inlineCode>{` 属性来实现闪烁效果。`}</p>\n    <p>{`当然，也可以用右边框来模拟光标效果，这样就可以把有限的伪元素资源节省下来留作他用。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`@keyframes typing {\n    from { width: 0 }\n}\n@keyframes caret {\n    50% { border-color: transparent; }\n}\nh1 {\n    width: 12em;\n    overflow: hidden;\n    white-space: nowrap;\n    border-right: .05em solid;\n    animation: typing 5s steps(12), caret .5s steps(1) infinite;\n}\n`}</code></pre>\n    <h2>{`总结`}</h2>\n    <p>{`寥寥数行 CSS 代码，便可以实现一段模拟打字的效果，其核心就是借助 `}<inlineCode parentName=\"p\">{`em`}</inlineCode>{` 单位及 `}<inlineCode parentName=\"p\">{`steps()`}</inlineCode>{` 属性 实现逐帧动画，并利用 `}<inlineCode parentName=\"p\">{`infinite`}</inlineCode>{` 属性创建一个不断循环闪烁的光标。`}</p>\n    <p>{`另外，这里我们使用的是 `}<inlineCode parentName=\"p\">{`em`}</inlineCode>{` 单位，设置 `}<inlineCode parentName=\"p\">{`h1`}</inlineCode>{` 宽度为 `}<inlineCode parentName=\"p\">{`12em`}</inlineCode>{`，12 这个数字是根据 `}<inlineCode parentName=\"p\">{`h1`}</inlineCode>{` 标签内的字符串长度得来的。`}</p>\n    <p>{`不过，如果不是中文，建议使用 `}<inlineCode parentName=\"p\">{`ch`}</inlineCode>{` 单位来设置 `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{`。`}</p>\n    <p>{`对于一段文字夹杂了中文、英文等其他字符，会发生一些预期之外的现象，所以，该解决方案也有一定的局限性。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}